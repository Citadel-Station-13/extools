#ifdef I
#define TODO dis_none

I(       0x0, END, dis_none)
I(       0x1, NEW, dis_arg<1>)
I(       0x2, FORMAT, dis_arg<2>)
I(       0x3, OUTPUT, dis_none)
I(       0x4, OUTPUT_FORMAT, dis_custom_output_format)
I(       0x5, STAT, dis_none)
I(       0x7, LINK, TODO)
I(       0x8, OUTPUT_FTP, dis_none)
I(       0x9, OUTPUT_RUN, dis_none)
I(       0xB, MISSILE, dis_none)
I(       0xC, DEL, dis_none)
I(       0xD, TEST, dis_none)
I(       0xE, NOT, dis_none)
I(       0xF, JMP, dis_jump<1>)
I(      0x10, JNZ, dis_jump<1>)
I(      0x11, JZ, dis_jump<1>)
I(      0x12, RET, dis_none)
I(      0x13, ISLOC, dis_none)
I(      0x14, ISMOB, dis_none)
I(      0x15, ISOBJ, dis_none)
I(      0x16, ISAREA, dis_none)
I(      0x17, ISTURF, dis_none)
I(      0x18, ALERT, dis_none)
I(      0x19, EMPTYLIST, TODO)
I(      0x1A, NEWLIST, dis_arg<1>)
I(      0x1B, VIEW, TODO)
I(      0x1C, OVIEW, TODO)
I(      0x1D, VIEW_TARGET, TODO)
I(      0x1E, OVIEW_TARGET, TODO)
I(      0x1F, BLOCK, dis_none)
I(      0x21, PROB, dis_none)
I(      0x22, RAND, dis_none)
I(      0x23, RAND_RANGE, dis_none)
I(      0x24, SLEEP, dis_none)
I(      0x25, SPAWN, dis_arg<1>)
I(      0x27, BROWSE_RSC, dis_none)
I(      0x28, ISICON, dis_none)
I(      0x29, CALL, dis_custom_call)
I(      0x2A, CALLNR, dis_custom_call)
I(      0x2B, CALLPATH, dis_arg<1>)
I(      0x2C, CALLPARENT, dis_none)
I(      0x30, CALLGLOB, dis_custom_callglob)
I(      0x31, LOG10, dis_none)
I(      0x32, LOG, dis_none)
I(      0x33, GETVAR, dis_var)
I(      0x34, SETVAR, dis_var)
I(      0x35, SETVAR_COPY, dis_var)
I(      0x36, GETFLAG, dis_none)
I(      0x37, TEQ, dis_none)
I(      0x38, TNE, dis_none)
I(      0x39, TL, dis_none)
I(      0x3A, TG, dis_none)
I(      0x3B, TLE, dis_none)
I(      0x3C, TGE, dis_none)
I(      0x3D, ANEG, dis_none)
I(      0x3E, ADD, dis_none)
I(      0x3F, SUB, dis_none)
I(      0x40, MUL, dis_none)
I(      0x41, DIV, dis_none)
I(      0x42, MOD, dis_none)
I(      0x43, ROUND, dis_none)
I(      0x44, ROUNDN, dis_none)
I(      0x45, AUGADD, dis_var)
I(      0x46, AUGSUB, dis_var)
I(      0x47, AUGMUL, dis_var)
I(      0x48, AUGDIV, dis_var)
I(      0x49, AUGMOD, dis_var)
I(      0x4A, AUGAND, dis_var)
I(      0x4B, AUGOR, dis_var)
I(      0x4C, AUGXOR, dis_var)
I(      0x4D, AUGLSHIFT, dis_var)
I(      0x4E, AUGRSHIFT, dis_var)
I(      0x50, PUSHI, dis_arg<1>)
I(      0x51, POP, dis_none)
I(      0x52, ITERLOAD, dis_arg<2>)
I(      0x53, ITERNEXT, dis_none)
I(      0x57, ROLL, dis_none)
I(      0x5A, LOCATE_POS, dis_none)
I(      0x5B, LOCATE_REF, dis_none)
I(      0x5C, FLICK, dis_none)
I(      0x5D, SHUTDOWN, dis_none)
I(      0x5E, STARTUP, dis_arg<1>)
I(      0x5F, ROLL_STR, dis_none)
I(      0x60, PUSHVAL, dis_custom_pushval)
I(      0x61, NEW_IMAGE, dis_none)
I(      0x62, PRE_INC, dis_var)
I(      0x63, POST_INC, dis_var)
I(      0x64, PRE_DEC, dis_var)
I(      0x65, POST_DEC, dis_var)
I(      0x66, INC, dis_var)
I(      0x67, DEC, dis_var)
I(      0x68, ABS, dis_none)
I(      0x69, SQRT, dis_none)
I(      0x6A, POW, dis_none)
I(      0x6B, TURN, dis_none)
I(      0x6C, ADDTEXT, dis_arg<1>)
I(      0x6D, LENGTH, dis_none)
I(      0x6E, COPYTEXT, dis_none)
I(      0x6F, FINDTEXT, dis_none)
I(      0x70, FINDTEXTEX, dis_none)
I(      0x71, CMPTEXT, dis_none)
I(      0x72, SORTTEXT, dis_arg<1>)
I(      0x73, SORTTEXTEX, dis_arg<1>)
I(      0x74, UPPERTEXT, dis_none)
I(      0x75, LOWERTEXT, dis_none)
I(      0x76, TEXT2NUM, dis_none)
I(      0x77, NUM2TEXT, dis_none)
I(      0x78, SWITCH, dis_custom_switch)
I(      0x79, PICK_SWITCH, dis_custom_pick_switch)
I(      0x7A, SWITCH_RANGE, TODO)
I(      0x7B, LISTGET, dis_none)
I(      0x7C, LISTSET, dis_none)
I(      0x7D, ISTYPE, dis_none)
I(      0x7E, BINARY_AND, dis_none)
I(      0x7F, BINARY_OR, dis_none)
I(      0x80, BINARY_XOR, dis_none)
I(      0x81, BITWISE_NOT, dis_none)
I(      0x82, LSHIFT, dis_none)
I(      0x83, RSHIFT, dis_none)
I(      0x84, DBG_FILE, dis_custom_dbg_file)
I(      0x85, DBG_LINENO, dis_custom_dbg_lineno)
I(      0x86, STEP, dis_none)
I(      0x87, STEP_TO, dis_none)
I(      0x88, STEP_AWAY, dis_none)
I(      0x89, STEP_TOWARDS, dis_none)
I(      0x8A, STEP_RAND, dis_none)
I(      0x8B, WALK, dis_none)
I(      0x8C, WALK_TO, dis_none)
I(      0x8D, WALK_AWAY, dis_none)
I(      0x8E, WALK_TOWARDS, dis_none)
I(      0x8F, WALK_RAND, dis_none)
I(      0x90, GET_STEP, dis_none)
I(      0x91, GET_STEP_TO, dis_none)
I(      0x92, GET_STEP_AWAY, dis_none)
I(      0x93, GET_STEP_TOWARDS, dis_none)
I(      0x94, GET_STEP_RAND, dis_none)
I(      0x95, GET_DIST, dis_none)
I(      0x96, GET_DIR, dis_none)
I(      0x97, LOCATE_TYPE, dis_none)
I(      0x98, SHELL, dis_none)
I(      0x99, TEXT2FILE, dis_none)
I(      0x9A, FILE2TEXT, dis_none)
I(      0x9B, FCOPY, dis_none)
I(      0x9E, ISNULL, dis_none)
I(      0x9F, ISNUM, dis_none)
I(      0xA0, ISTEXT, dis_none)
I(      0xA1, STATPANEL, dis_none)
I(      0xA2, STATPANEL_CHECK, dis_none)
I(      0xA5, MIN, dis_arg<1>)
I(      0xA6, MAX, dis_arg<1>)
I(      0xA7, TYPESOF, dis_arg<1>)
I(      0xA8, CKEY, dis_none)
I(      0xA9, ISINLIST, dis_custom_isinlist)
I(      0xAA, BROWSE, dis_none)
I(      0xAB, BROWSE_OPT, dis_none)
I(      0xAC, FLIST, dis_none)
I(      0xB0, INDEX, dis_none)
I(      0xB2, JMP_OR, dis_jump<1>)
I(      0xB3, JMP_AND, dis_jump<1>)
I(      0xB4, FDEL, dis_none)
I(      0xB5, CALLNAME, dis_arg<1>)
I(      0xB7, LIST2PARAMS, dis_none)
I(      0xB8, PARAMS2LIST, dis_none)
I(      0xB9, CKEY_EX, dis_none)
I(      0xBA, PROMPTCHECK, dis_none)
I(      0xBB, RGB, dis_none)
I(      0xBC, HASCALL, dis_none)
I(      0xBE, HTML_ENCODE, dis_none)
I(      0xBF, HTML_DECODE, dis_none)
I(      0xC0, TIME2TEXT, dis_none)
I(      0xC1, INPUT, dis_arg<3>)
I(      0xC2, SIN, dis_none)
I(      0xC3, COS, dis_none)
I(      0xC4, ARCSIN, dis_none)
I(      0xC5, ARCCOS, dis_none)
I(      0xC7, CRASH, dis_none)
I(      0xC8, NEW_ASSOC_LIST, dis_arg<1>)
I(      0xCB, CALLPATH_ARGLIST, dis_none)
I(      0xCC, CALLNAME_ARGLIST, dis_none)
I(      0xCD, CALL_GLOBAL_ARGLIST, dis_custom_call_global_arglist)
I(      0xCF, NEW_ARGLIST, dis_none)
I(      0xD0, MIN_LIST, dis_none)
I(      0xD1, MAX_LIST, dis_none)
I(      0xD2, PICK, dis_none)
I(      0xD3, NEW_IMAGE_ARGLIST, dis_none)
I(      0xD7, FCOPY_RSC, dis_none)
I(      0xDA, RAND_SEED, dis_none)
I(      0xDB, TEXT2ASCII, dis_none)
I(      0xDC, ASCII2TEXT, dis_none)
I(      0xDD, ICON_STATES, dis_none)
I(      0xDE, ICON_NEW, dis_arg<1>)
I(      0xDF, DM_TURN_OR_FLIP_ICON, dis_arg_var<1>)
I(      0xE1, DM_ICON_INTENSITY, dis_var)
I(      0xE2, DM_ICON_SWAP_COLOR, dis_var)
I(      0xE3, DM_SHIFT_ICON, dis_var)
I(      0xE4, ISFILE, dis_none)
I(      0xE6, OVIEWERS, dis_none)
I(      0xE7, HEARERS, dis_none)
I(      0xE8, OHEARERS, dis_none)
I(      0xF5, ISPATH, dis_none)
I(      0xF6, ISSUBPATH, dis_none)
I(      0xF7, FEXISTS, dis_none)
I(      0xF8, JMP2, dis_jump<1>)
I(      0xF9, JNZ2, dis_jump<1>)
I(      0xFA, JZ2, dis_jump<1>)
I(      0xFB, POPN, dis_arg<1>)
I(      0xFC, CHECKNUM, dis_none)
I(      0xFD, FOR_RANGE, dis_arg<3>)
I(     0x105, DM_ICON_DRAW_BOX, dis_var)
I(     0x106, DM_ICON_INSERT, dis_arg_var<1>)
I(     0x107, URL_ENCODE, dis_none)
I(     0x108, URL_DECODE, dis_none)
I(     0x109, MD5, dis_none)
I(     0x10A, TEXT2PATH, dis_none)
I(     0x10C, WINSET, dis_none)
I(     0x10D, WINGET, dis_none)
I(     0x10E, WINCLONE, dis_none)
I(     0x10F, WINSHOW, dis_none)
I(     0x110, DM_ICON_MAP_COLORS, dis_arg_var<1>)
I(     0x111, DM_ICON_SCALE, dis_var)
I(     0x112, DM_ICON_CROP, dis_var)
I(     0x113, RGBA, dis_none)
I(     0x114, ICON_STATES_MODE, dis_none)
I(     0x115, DM_ICON_GET_PIXEL, dis_var)
I(     0x116, CALL_LIB, dis_arg<1>)
I(     0x117, CALL_LIB_ARGLIST, dis_arg<1>)
I(     0x118, WINEXISTS, dis_none)
I(     0x119, DM_ICON_BLEND, dis_var)
I(     0x11A, DM_ICON_SIZE, dis_none)
I(     0x11B, BOUNDS, dis_none)
I(     0x11C, OBOUNDS, dis_arg<1>)
I(     0x11D, BOUNDS_DIST, dis_none)
I(     0x11E, STEP_SPEED, dis_none)
I(     0x11F, STEP_TO_SPEED, dis_none)
I(     0x120, STEP_AWAY_SPEED, dis_none)
I(     0x121, STEP_TOWARDS_SPEED, dis_none)
I(     0x122, STEP_RAND_SPEED, dis_none)
I(     0x123, WALK_SPEED, dis_none)
I(     0x124, WALK_TO_SPEED, dis_none)
I(     0x125, WALK_AWAY_SPEED, dis_none)
I(     0x126, WALK_TOWARDS_SPEED, dis_none)
I(     0x127, WALK_RAND_SPEED, dis_none)
I(     0x128, ANIMATE, dis_none)
I(     0x12A, MATRIX_NEW, dis_arg<1>)
I(     0x12B, DM_DATABASE, dis_arg<1>)
I(     0x12D, THROW, dis_none)
I(     0x130, REPLACETEXT, dis_none)
I(     0x131, REPLACETEXTEX, dis_none)
I(     0x132, FINDLASTTEXT, dis_none)
I(     0x133, FINDLASTTEXTEX, dis_none)
I(     0x134, SPANTEXT, dis_none)
I(     0x135, NONSPANTEXT, dis_none)
I(     0x136, SPLITTEXT, dis_none)
I(     0x137, JOINTEXT, dis_none)
I(     0x138, JSON_ENCODE, dis_none)
I(     0x139, JSON_DECODE, dis_none)
I(     0x13A, REGEX_NEW, dis_arg<1>)
I(     0x13D, JMP_IF_NULL, dis_jump<1>)
I(     0x142, LPUSH_CACHE, dis_none)
I(     0x143, SET_CACHE, dis_none)
I(     0x144, TAN, dis_none)
I(     0x145, ARCTAN, dis_none)
I(     0x146, ARCTAN2, dis_none)
I(     0x147, ISLIST, dis_none)
I(     0x148, REF, dis_none)
I(     0x149, ISMOVABLE, dis_none)
I(     0x14A, CLAMP, dis_none)
I(     0x14B, SHA1, dis_none)
I(     0x14D, LENGTH_CHAR, dis_none)
I(     0x14E, COPYTEXT_CHAR, dis_none)
I(     0x151, REPLACETEXT_CHAR, dis_none)
I(     0x152, REPLACETEXTEX_CHAR, dis_none)
I(     0x153, FINDLASTTEXT_CHAR, dis_none)
I(     0x154, FINDLASTTEXTEX_CHAR, dis_none)
I(     0x155, SPANTEXT_CHAR, dis_none)
I(     0x156, NONSPANTEXT_CHAR, dis_none)
I(     0x157, SPLITTEXT_CHAR, dis_none)
I(     0x158, TEXT2NUM_RADIX, dis_none)
I(     0x159, NUM2TEXT_RADIX, dis_none)

#undef TODO
#undef I
#endif
